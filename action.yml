name: Issue SSL certificate
description: Issue SSL certificate with lego DNS API mode.
branding:
  icon: lock
  color: blue

inputs:
  accounts-tar-base64:
    description: Base64 encoded tar file content of your account files in `~/.lego` (i.e. output of `tar cz accounts | base64 -w0` in your `~/.lego` directory).
    required: false
    default: ''
  lego-envs:
    description: 'Environment variables for lego (key=value pairs separated by commas)'
    required: true
    default: 'VAR1=value1,VAR2=value2'
  version:
    description: version of lego cli Tools
    required: true
    default: 'latest'
  email:
    description: email of account
    required: true
  lego-dns-provider:
    description: ref https://go-acme.github.io/lego/dns/index.html
    required: true
  domains:
    description: separate with common
    required: true
  dns-resolvers:
    description: for dns challenage check
    required: true
    default: "1.1.1.1:53"
runs:
  using: "composite"
  steps:
    - name: Get latest go version
      id: version
      shell: bash
      run: |
        echo ::set-output name=go_version::$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g')
      
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ steps.version.outputs.go_version }}
    
    - name: Install Lego Tools
      shell: bash
      run: |
        export && \
        mkdir -p ~/.lego/ && \
        go install github.com/go-acme/lego/v4/cmd/lego@${{ inputs.version }}

    - name: Extract account files for lego
      run: |
        if ! [[ -z "$LEGO_INPUT_ACCOUNT_TAR" ]]; then
          echo "$LEGO_INPUT_ACCOUNT_TAR" | base64 -d | tar -C ~/.lego/ -xz
        fi
      shell: bash
      env:
        LEGO_INPUT_ACCOUNT_TAR: ${{ inputs.accounts-tar-base64 }}

    - name: Parse and set environment variables for lego
      shell: bash
      run: |
        IFS=',' read -ra ENV_PAIRS <<< "${{ inputs.lego-envs }}"
        for ENV_PAIR in "${ENV_PAIRS[@]}"; do
          IFS='=' read -ra KV <<< "$ENV_PAIR"
          echo "${KV[0]}=${KV[1]}" >> $GITHUB_ENV
        done

    - name: Request SSL certificate with lego cli tools
      shell: bash
      run: |
        lego --email "${{ inputs.email }}" --dns ${{ inputs.lego-dns-provider }} --domains "${{ inputs.domains }}" --dns.resolvers ${{ inputs.dns-resolvers }} run
    